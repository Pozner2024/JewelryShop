document.addEventListener("DOMContentLoaded",()=>{document.body.addEventListener("click",async a=>{var o;const r=a.target.closest(".product-card__btn, .product-info__btn-cart");if(!r)return;a.preventDefault();const e=a.target.closest(".product-card, .product-detail__container");if(!e)return;const t=e.dataset.productId;if(t)try{const c=await fetch("/api/cart/add",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({productId:t,quantity:1})});if(c.status===401){(o=document.getElementById("loginModal"))==null||o.classList.add("show");return}if(!c.ok)throw new Error("Failed to add to cart");r.textContent="Added!",setTimeout(()=>{r.textContent="Add to Cart"},2e3),d()}catch(c){console.error(c)}});const s=document.querySelector(".cart-page");if(s){const a=s.querySelector(".cart-items");a.addEventListener("click",async e=>{const t=e.target,o=t.closest(".cart-item");if(!o)return;const c=o.dataset.productId,n=o.querySelector(".quantity__input");let u=parseInt(n.value,10);t.matches(".quantity__btn--plus")?(u++,i(c,u,n)):t.matches(".quantity__btn--minus")?(u--,i(c,u,n)):t.matches(".cart-item__remove")&&i(c,0,n)}),a.addEventListener("change",e=>{const t=e.target;if(t.matches(".quantity__input")){const c=t.closest(".cart-item").dataset.productId,n=parseInt(t.value,10);i(c,n,t)}});const r=s.querySelector(".button--primary.button--full");r&&r.addEventListener("click",async e=>{e.preventDefault();try{const t=await fetch("/api/cart/checkout",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"}}),o=await t.json();t.ok&&o.success?(s.querySelector(".cart-content").innerHTML='<p class="cart-success-message">Thank you for your purchase!</p>',d()):alert(o.message||"Checkout failed.")}catch{alert("Checkout failed.")}})}async function i(a,r,e){try{if(!(await fetch("/api/cart/update",{method:"PUT",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({productId:a,quantity:r})})).ok)throw new Error("Failed to update cart");r<=0?e.closest(".cart-item").remove():e.value=r,l()}catch(t){console.error(t)}}function l(){const a=document.querySelectorAll(".cart-item");if(a.length===0){document.querySelector(".cart-content").innerHTML='<p class="cart-empty-message">Your cart is empty. <a href="/catalog">Continue shopping</a>.</p>';return}let r=0;a.forEach(e=>{let t=e.querySelector(".cart-item__price").textContent;t=t.replace(/[^\d.\-]/g,"");const o=parseFloat(t),c=parseInt(e.querySelector(".quantity__input").value,10),n=(isNaN(o)?0:o)*(isNaN(c)?0:c);e.querySelector(".cart-item__total-price").textContent=`$${n.toFixed(2)}`,r+=n}),document.querySelector(".summary-subtotal").textContent=`$${r.toFixed(2)}`,document.querySelector(".summary-grand-total").textContent=`$${r.toFixed(2)}`}async function d(){try{const a=await fetch("/api/cart");if(!a.ok)return;const e=(await a.json()).cart.reduce((o,c)=>o+c.quantity,0),t=document.querySelector(".header__cart-count");t&&(t.textContent=e,t.style.display=e>0?"flex":"none")}catch(a){console.error("Failed to fetch cart count",a)}}d()});
