# Nginx раздаёт статику, остальные запросы проксирует на Node.js/Express и кеширует ответы только для публичных страниц

# ВАЖНО: proxy_cache_path должен быть добавлен в http-блок основного nginx.conf:
# proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name example.com;  # Замените на ваш домен или IP

    # Логи доступа и ошибок
    access_log /var/log/nginx/jewelryshop.access.log;
    error_log  /var/log/nginx/jewelryshop.error.log;

    # Раздача статики
    location ~ ^/client/(images|styles|scripts|public)/ {
        alias /var/www/jewelryshop/client/$1/;
        access_log off;
        expires 30d;
        gzip_static on;
    }

    # Можно добавить другие статики, если нужно
    # location /uploads/ { ... }

    # Все остальные запросы — на Node.js (Express) + кеширование
    location / {
        proxy_pass http://localhost:3000;

        # Включаем кеширование
        proxy_cache my_cache;
        proxy_cache_valid 200 302 10m;   # 10 минут для успешных ответов
        proxy_cache_valid 404 1m;        # 1 минута для 404
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Proxy-Cache $upstream_cache_status;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # --- Исключения из кеша только по URI ---
        set $skip_cache 0;
        if ($request_uri ~* ^/(profile|cart|admin)) {
            set $skip_cache 1;
        }
        proxy_no_cache $skip_cache;
        proxy_cache_bypass $skip_cache;
    }

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}

# ---
# Инструкции:
# 1. Добавьте proxy_cache_path в http-блок основного nginx.conf (см. выше)
# 2. Скопируйте этот файл на сервер (например, в /etc/nginx/sites-available/jewelryshop)
# 3. Проверьте пути к статикам (alias) и порт Node.js (proxy_pass)
# 4. Создайте симлинк в sites-enabled и перезапустите nginx:
#    sudo ln -s /etc/nginx/sites-available/jewelryshop /etc/nginx/sites-enabled/
#    sudo systemctl reload nginx
# 5. Проверьте, что папка /var/cache/nginx существует и права принадлежат пользователю nginx (www-data) 